<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>.milk</title>
 <link href="https://cheshirecatalyst.github.io/atom.xml" rel="self"/>
 <link href="https://cheshirecatalyst.github.io/"/>
 <updated>2016-08-01T04:27:46-04:00</updated>
 <id>https://cheshirecatalyst.github.io</id>
 <author>
   <name>Seth Price</name>
   <email></email>
 </author>

 
 <entry>
   <title>After the WTF</title>
   <link href="https://cheshirecatalyst.github.io/2016/08/01/after-the-wtf/"/>
   <updated>2016-08-01T02:01:01-04:00</updated>
   <id>https://cheshirecatalyst.github.io/2016/08/01/after-the-wtf</id>
   <content type="html">&lt;p&gt;
Time for a little more meat and potatoes with this milk. What really inspired me
to start this blog was a &lt;a href=&quot;http://endlessparentheses.com/how-i-blog-one-year-of-posts-in-a-single-org-file.html&quot;&gt;post&lt;/a&gt; I came across. I must admit the idea of keeping my
blog in a single file sounded extremely sexy, so armed with this article I googled
my way to this point. All without ever having used org-mode at all or realizing
org-mode is like some sort of strange markdown it seems like. And now I am hooked.
&lt;/p&gt;

&lt;p&gt;
So the wtf:
&lt;/p&gt;

&lt;p&gt;
Apparently I had messed up some property or a tag in combination with something
funky in jekyll. Which somehow was getting blog posts for today rendered tomorrow.
No idea, I opened a talk thing over with the jekyll folks, ran through a bunch of
rm -rf, changed stuff, ended up removing all the properties added by the
endless/export-to-blog to my sub headings and running the command again, and some
how through all of that ::prezto:: it was working.
&lt;/p&gt;

&lt;p&gt;
I think it really started when I noticed that my eagerness to write stuff and post
had resulted in multiple posts for today and they were out of order so I hit up the
google magic and located an old github &lt;a href=&quot;https://github.com/jekyll/jekyll/issues/30&quot;&gt;issue&lt;/a&gt; and it seemed to be fixed. So that was
nice however I realized the problem was with the script I had found on previously
mentioned blog SO&amp;#x2026; I did a quick hack and somewhere after that it broke, then
it fixed itself. I think it had to do with updating posts that had already been
marked by the script with a file name or something I dunno. Long story short&amp;#x2026;
&quot;Too late!&quot; I undid my hack and polished it up a bit and submitted a pull request
for great justice.
&lt;/p&gt;

&lt;p&gt;
In case my shit code is shit and not merge worthy here is my &lt;a href=&quot;https://github.com/cheshirecatalyst/ox-jekyll-subtree&quot;&gt;version&lt;/a&gt; and the
&lt;a href=&quot;https://github.com/Malabarba/ox-jekyll-subtree&quot;&gt;original&lt;/a&gt; by author of previously mentioned blog. I would check the original
first to see if merged or perhaps he wrote it in a better way. Though I assume
very few people are posting multiple times a day from org-mode using his handy
helper, but I&#39;m continuously wrong, so we shall see.
&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Up And Running-ish</title>
   <link href="https://cheshirecatalyst.github.io/2016/07/31/up-and-running-ish/"/>
   <updated>2016-07-31T18:56:20-04:00</updated>
   <id>https://cheshirecatalyst.github.io/2016/07/31/up-and-running-ish</id>
   <content type="html">&lt;p&gt;
And now (hopefully) I have my google analytics up and running thanks to this
&lt;a href=&quot;http://stackoverflow.com/a/36797554&quot;&gt;answer&lt;/a&gt; which is further explained in &lt;a href=&quot;https://desiredpersona.com/google-analytics-jekyll/&quot;&gt;this&lt;/a&gt; blog post by aforementioned answerer.
Many thanks to him, and those working on &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;jekyll&lt;/a&gt;. I am really starting to appreciate
the stack as it is extremely intuitive and well documented. While they aren&#39;t really
in competition as they are for completely different domains, I consider jekyll to be
another great victory in the non-rails ruby web tech area.
&lt;/p&gt;

&lt;p&gt;
Oh, I almost forgot many thanks to &lt;a href=&quot;http://web-mode.org/&quot;&gt;web-mode&lt;/a&gt; which I just found, as i was getting
tired of seeing all sorts of funky errors in my .html from the jekyll templating
and such. This particular snippet after installation worked wonders:
&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cl&quot; data-lang=&quot;cl&quot;&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;add-to-list&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;&amp;#39;auto-mode-alist&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;\\.html?\\&amp;#39;&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;web-mode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;p&gt;
Also useful was this &lt;a href=&quot;http://orgmode.org/manual/Languages.html&quot;&gt;list&lt;/a&gt; of supported languages in &lt;a href=&quot;http://orgmode.org/manual/Literal-examples.html&quot;&gt;literal&lt;/a&gt; blocks with org-mode.
&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Instant Fun</title>
   <link href="https://cheshirecatalyst.github.io/2016/07/31/instant-fun/"/>
   <updated>2016-07-31T18:55:52-04:00</updated>
   <id>https://cheshirecatalyst.github.io/2016/07/31/instant-fun</id>
   <content type="html">&lt;p&gt;
So here is a useful &lt;a href=&quot;http://stackoverflow.com/questions/28249255/how-do-i-configure-github-to-use-non-supported-jekyll-site-plugins/28252200#28252200&quot;&gt;tidbit&lt;/a&gt; I came across while setting this whole thing up. I
suppose it is somewhat old news to some, however I am new to the &lt;a href=&quot;https://pages.github.com/&quot;&gt;github pages&lt;/a&gt;
game and haven&#39;t looked at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;jekyll&lt;/a&gt; since 2010-ish. That last bit is entirely my
fault though, as I had left &lt;a href=&quot;https://www.ruby-lang.org/en/&quot;&gt;ruby-land&lt;/a&gt; at that point and was off in &lt;a href=&quot;https://nodejs.org/en/&quot;&gt;v8-world&lt;/a&gt;
until recently. When I quit my job and moved back to the united states. Crazy
I know.
&lt;/p&gt;

&lt;p&gt;
So after catching up on &lt;a href=&quot;https://serialpodcast.org/&quot;&gt;serial&lt;/a&gt;, and getting back in to drawing, I finally got
to the point where I could look at code again. It was here as previously
mentioned that I got heavily into emacs. Which admittedly was less for the
sake of blogging, and more because I had finally committed to get more than
a passing familiarity with &lt;a href=&quot;https://common-lisp.net/&quot;&gt;cl&lt;/a&gt;. Which meant spending time in emacs and &lt;a href=&quot;https://github.com/slime/slime&quot;&gt;slime&lt;/a&gt;
and the more time I spent in emacs the more I found out it can &lt;a href=&quot;https://www.emacswiki.org/emacs/TheKitchenSink&quot;&gt;do&lt;/a&gt;. This, I am
almost certain, is an age-old story of emacs addiction. I wonder if there is
a 12 step program for this?&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>New Blog</title>
   <link href="https://cheshirecatalyst.github.io/2016/07/31/new-blog/"/>
   <updated>2016-07-31T18:00:00-04:00</updated>
   <id>https://cheshirecatalyst.github.io/2016/07/31/new-blog</id>
   <content type="html">&lt;p&gt;
Today I started on a new multi-pronged adventure. Ok, well most of those
prongs all revolve around &lt;a href=&quot;https://emacswiki.org/&quot;&gt;Emacs&lt;/a&gt;. Which is a cool looking and fun program in general.
So this adventure began when I decided to graduate from using it for editing
commit messages, and try to use it exclusively. Thus this blog is born.
&lt;/p&gt;


&lt;p&gt;
It&#39;s a pretty hefty task getting all the things how you want them, learning all
the &lt;a href=&quot;https://www.emacswiki.org/emacs/KeyChord&quot;&gt;chords&lt;/a&gt; sorting through similar yet frustratingly different problems and
solutions. This struggle in and of itself, helps the learner on many levels.
&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-lisp&quot; data-lang=&quot;lisp&quot;&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;
Did this work? I hope it did. And it did. Which is nice since I&#39;ve never even touched
&lt;a href=&quot;http://orgmode.org/&quot;&gt;org-mode&lt;/a&gt; before. In fact while writing that line I got sick of manually typing in
square brackets and looked up the chord for &#39;org-insert-link&#39; &#39;C-c C-l&#39;, which
took many keystrokes to hunt down, however over time the initial investment of
a few extra keystrokes is certainly worth never having to type those square brackets
again unless I just R E A L L Y wanted to. It seems I have digressed, I was excited
because the &lt;a href=&quot;http://orgmode.org/manual/Easy-templates.html#Easy-templates&quot;&gt;easy&lt;/a&gt; feature I read about to make a code block and see if it
was indeed exported as html worked. That is both the feature and the translation to
a code block in the output.
&lt;/p&gt;

&lt;p&gt;
I will cover this process more in depth in the future, but for now I am just stoked
this is all working, and glad I put the initial effort into Emacs to reach the
critical mass point where it all (at least to me) seems to start coming together.&lt;/p&gt;
</content>
 </entry>
 

</feed>
